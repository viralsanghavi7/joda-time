/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 24 02:31:51 GMT 2015
 */

package org.joda.time.field;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeFieldType;
import org.joda.time.DateTimeZone;
import org.joda.time.Days;
import org.joda.time.Duration;
import org.joda.time.DurationField;
import org.joda.time.DurationFieldType;
import org.joda.time.Hours;
import org.joda.time.Instant;
import org.joda.time.Minutes;
import org.joda.time.Period;
import org.joda.time.Weeks;
import org.joda.time.chrono.BuddhistChronology;
import org.joda.time.chrono.CopticChronology;
import org.joda.time.chrono.EthiopicChronology;
import org.joda.time.chrono.GregorianChronology;
import org.joda.time.chrono.ISOChronology;
import org.joda.time.chrono.IslamicChronology;
import org.joda.time.chrono.JulianChronology;
import org.joda.time.chrono.StrictChronology;
import org.joda.time.field.DecoratedDurationField;
import org.joda.time.field.DelegatedDurationField;
import org.joda.time.field.MillisDurationField;
import org.joda.time.field.PreciseDurationField;
import org.joda.time.field.ScaledDurationField;
import org.joda.time.field.UnsupportedDateTimeField;
import org.joda.time.field.UnsupportedDurationField;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DelegatedDurationField_ESTest extends DelegatedDurationField_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 21 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.isSupported()Z:false
   * Goal 2. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;)V: Line 51
   * Goal 3. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 61
   * Goal 4. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 64
   * Goal 5. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 65
   * Goal 6. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 66
   * Goal 7. org.joda.time.field.DelegatedDurationField.isSupported()Z: Line 90
   * Goal 8. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;)V: root-Branch
   * Goal 9. org.joda.time.field.DelegatedDurationField.isSupported()Z: root-Branch
   * Goal 10. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - true
   * Goal 11. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - false
   * Goal 12. Weak Mutation 0: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:61 - ReplaceComparisonOperator != null -> = null
   * Goal 13. Weak Mutation 3: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:65 - ReplaceComparisonOperator != null -> = null
   * Goal 14. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;)V
   * Goal 15. org.joda.time.field.DelegatedDurationField.isSupported()Z
   * Goal 16. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;)V
   * Goal 17. org.joda.time.field.DelegatedDurationField.isSupported()Z
   * Goal 18. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - true in context: 
   * Goal 19. Branch org.joda.time.field.DelegatedDurationField.isSupported()Z: root-Branch in context: org.joda.time.field.DelegatedDurationField:isSupported()Z
   * Goal 20. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - false in context: 
   * Goal 21. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;)V: root-Branch in context: 
   */

  @Test
  public void test00()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      boolean boolean0 = delegatedDurationField0.isSupported();
      assertFalse(boolean0);
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.isPrecise()Z:false
   * Goal 2. org.joda.time.field.DelegatedDurationField.isPrecise()Z: Line 94
   * Goal 3. org.joda.time.field.DelegatedDurationField.isPrecise()Z: root-Branch
   * Goal 4. org.joda.time.field.DelegatedDurationField.isPrecise()Z
   * Goal 5. org.joda.time.field.DelegatedDurationField.isPrecise()Z
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.isPrecise()Z: root-Branch in context: org.joda.time.field.DelegatedDurationField:isPrecise()Z
   */

  @Test
  public void test01()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      boolean boolean0 = delegatedDurationField0.isPrecise();
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 10 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;:nonnull:org.joda.time.DurationField:hashCode()I:positive
   * Goal 2. org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;: Line 75
   * Goal 3. org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;: root-Branch
   * Goal 4. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - true
   * Goal 5. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V
   * Goal 6. org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;
   * Goal 7. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V
   * Goal 8. org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - true in context: 
   * Goal 10. Branch org.joda.time.field.DelegatedDurationField.getWrappedField()Lorg/joda/time/DurationField;: root-Branch in context: org.joda.time.field.DelegatedDurationField:getWrappedField()Lorg/joda/time/DurationField;
   */

  @Test
  public void test02()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField1 = (ScaledDurationField)delegatedDurationField0.getWrappedField();
      assertEquals(609, scaledDurationField1.getScalar());
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: Line 110
   * Goal 3. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: root-Branch
   * Goal 4. Weak Mutation 8: org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:110 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 9: org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:110 - InsertUnaryOp Negation
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValueAsLong(JJ)J
   */

  @Test
  public void test03()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.millis();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getValueAsLong(0L, 0L);
      assertEquals(0L, long0);
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:positive
   */

  @Test
  public void test04()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.centuries();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1L);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(preciseDurationField0);
      long long0 = delegatedDurationField0.getValueAsLong(1L, (-233L));
      assertEquals(1L, long0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J:negative
   */

  @Test
  public void test05()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.getValueAsLong((-2789L));
      assertEquals((-2789L), long0);
  }

  //Test case number: 6
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValue(JJ)I:negative
   */

  @Test
  public void test06()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      int int0 = delegatedDurationField0.getValue((-150L), 161L);
      assertEquals((-150), int0);
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValue(J)I:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValue(J)I: Line 98
   * Goal 3. org.joda.time.field.DelegatedDurationField.getValue(J)I: root-Branch
   * Goal 4. Weak Mutation 4: org.joda.time.field.DelegatedDurationField.getValue(J)I:98 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getValue(J)I
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValue(J)I
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.getValue(J)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValue(J)I
   */

  @Test
  public void test07()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      int int0 = delegatedDurationField0.getValue(0L);
      assertEquals(0, int0);
  }

  //Test case number: 8
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValue(J)I:negative
   */

  @Test
  public void test08()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      int int0 = delegatedDurationField0.getValue((-5L));
      assertEquals((-5), int0);
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getUnitMillis()J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getUnitMillis()J: Line 146
   * Goal 3. org.joda.time.field.DelegatedDurationField.getUnitMillis()J: root-Branch
   * Goal 4. org.joda.time.field.DelegatedDurationField.getUnitMillis()J
   * Goal 5. org.joda.time.field.DelegatedDurationField.getUnitMillis()J
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.getUnitMillis()J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getUnitMillis()J
   */

  @Test
  public void test09()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.months();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 0L);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(preciseDurationField0);
      long long0 = delegatedDurationField0.getUnitMillis();
      assertEquals(0L, long0);
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getUnitMillis()J:negative
   */

  @Test
  public void test10()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, 1L);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) preciseDurationField0, durationFieldType0, (-23));
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getUnitMillis();
      assertEquals((-23L), long0);
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;:nonnull:org.joda.time.DurationFieldType:hashCode()I:positive
   * Goal 2. org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;
   * Goal 3. org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;
   * Goal 4. Branch org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;: root-Branch in context: org.joda.time.field.DelegatedDurationField:getType()Lorg/joda/time/DurationFieldType;
   * Goal 5. org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;: Line 79
   * Goal 6. org.joda.time.field.DelegatedDurationField.getType()Lorg/joda/time/DurationFieldType;: root-Branch
   */

  @Test
  public void test11()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(0, 0);
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology0);
      DurationField durationField0 = strictChronology0.minutes();
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0, durationFieldType0);
      DurationFieldType durationFieldType1 = delegatedDurationField0.getType();
      assertEquals("seconds", durationFieldType1.toString());
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: Line 126
   * Goal 3. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: root-Branch
   * Goal 4. Weak Mutation 18: org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:126 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 19: org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:126 - InsertUnaryOp Negation
   * Goal 6. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(JJ)J
   */

  @Test
  public void test12()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getMillis(0L, 0L);
      assertEquals(0L, long0);
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:positive
   */

  @Test
  public void test13()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.getMillis(1L, (-2789L));
      assertEquals(1L, long0);
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(J)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(J)J: Line 118
   * Goal 3. org.joda.time.field.DelegatedDurationField.getMillis(J)J: root-Branch
   * Goal 4. Weak Mutation 13: org.joda.time.field.DelegatedDurationField.getMillis(J)J:118 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getMillis(J)J
   * Goal 6. org.joda.time.field.DelegatedDurationField.getMillis(J)J
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.getMillis(J)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(J)J
   */

  @Test
  public void test14()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getMillis(0L);
      assertEquals(0L, long0);
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(J)J:negative
   */

  @Test
  public void test15()  throws Throwable  {
      EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance();
      StrictChronology strictChronology0 = StrictChronology.getInstance(ethiopicChronology0);
      DurationField durationField0 = strictChronology0.centuries();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getMillis((-1L));
      assertEquals((-3155760000000L), long0);
  }

  //Test case number: 16
  /*
   * 10 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: Line 122
   * Goal 3. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: root-Branch
   * Goal 4. Weak Mutation 14: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 15: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp IINC 1
   * Goal 6. Weak Mutation 16: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp IINC -1
   * Goal 7. Weak Mutation 17: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp Negation
   * Goal 8. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J
   * Goal 9. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J
   * Goal 10. Branch org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(IJ)J
   */

  @Test
  public void test16()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(0, 0);
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology0);
      DurationField durationField0 = strictChronology0.minutes();
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getMillis(0, (long) 0);
      assertEquals(0L, long0);
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:negative
   */

  @Test
  public void test17()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.getMillis((-2789), 1L);
      assertEquals((-2789L), long0);
  }

  //Test case number: 18
  /*
   * 9 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(I)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(I)J: Line 114
   * Goal 3. org.joda.time.field.DelegatedDurationField.getMillis(I)J: root-Branch
   * Goal 4. Weak Mutation 10: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 11: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp IINC 1
   * Goal 6. Weak Mutation 12: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp IINC -1
   * Goal 7. org.joda.time.field.DelegatedDurationField.getMillis(I)J
   * Goal 8. org.joda.time.field.DelegatedDurationField.getMillis(I)J
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.getMillis(I)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(I)J
   */

  @Test
  public void test18()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetHoursMinutes(0, 0);
      IslamicChronology islamicChronology0 = IslamicChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology0);
      DurationField durationField0 = strictChronology0.minutes();
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getMillis(0);
      assertEquals(0L, long0);
  }

  //Test case number: 19
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(I)J:negative
   */

  @Test
  public void test19()  throws Throwable  {
      JulianChronology julianChronology0 = JulianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(julianChronology0);
      DurationField durationField0 = strictChronology0.months();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getMillis((-1361));
      assertEquals((-3579157800000L), long0);
  }

  //Test case number: 20
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:positive
   * Goal 2. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: Line 142
   * Goal 3. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: root-Branch
   * Goal 4. Weak Mutation 28: org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:142 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 29: org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:142 - InsertUnaryOp Negation
   * Goal 6. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getDifferenceAsLong(JJ)J
   */

  @Test
  public void test20()  throws Throwable  {
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.millis();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getDifferenceAsLong(0L, (-1909L));
      assertEquals(1909L, long0);
  }

  //Test case number: 21
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:negative
   */

  @Test
  public void test21()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getDifferenceAsLong(0L, 31083663600000L);
      assertEquals((-31083663600L), long0);
  }

  //Test case number: 22
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: Line 138
   * Goal 3. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: root-Branch
   * Goal 4. Weak Mutation 26: org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:138 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 27: org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:138 - InsertUnaryOp Negation
   * Goal 6. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I
   * Goal 7. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:getDifference(JJ)I
   */

  @Test
  public void test22()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.minuteOfDay();
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      UnsupportedDateTimeField unsupportedDateTimeField0 = UnsupportedDateTimeField.getInstance(dateTimeFieldType0, scaledDurationField0);
      ScaledDurationField scaledDurationField1 = (ScaledDurationField)unsupportedDateTimeField0.getDurationField();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField1, durationFieldType0);
      int int0 = delegatedDurationField0.getDifference(609, 1071L);
      assertEquals(0, int0);
  }

  //Test case number: 23
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:positive
   */

  @Test
  public void test23()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      int int0 = delegatedDurationField0.getDifference(3694L, 0L);
      assertEquals(3694, int0);
  }

  //Test case number: 24
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I:positive
   * Goal 2. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: Line 150
   * Goal 3. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch
   * Goal 4. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I
   * Goal 5. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:compareTo(Lorg/joda/time/DurationField;)I
   */

  @Test
  public void test24()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      Duration duration0 = Duration.ZERO;
      Hours hours0 = duration0.toStandardHours();
      Weeks weeks0 = hours0.toStandardWeeks();
      Minutes minutes0 = weeks0.toStandardMinutes();
      DurationFieldType durationFieldType0 = minutes0.getFieldType();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (-2089L));
      int int0 = delegatedDurationField0.compareTo((DurationField) preciseDurationField0);
      assertEquals(1, int0);
  }

  //Test case number: 25
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I:negative
   */

  @Test
  public void test25()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField1 = new ScaledDurationField((DurationField) delegatedDurationField0, durationFieldType0, (-1));
      DelegatedDurationField delegatedDurationField1 = new DelegatedDurationField(scaledDurationField1, durationFieldType0);
      int int0 = delegatedDurationField1.compareTo((DurationField) decoratedDurationField0);
      assertEquals((-1), int0);
  }

  //Test case number: 26
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JJ)J:positive
   * Goal 2. org.joda.time.field.DelegatedDurationField.add(JJ)J: Line 134
   * Goal 3. org.joda.time.field.DelegatedDurationField.add(JJ)J: root-Branch
   * Goal 4. Weak Mutation 24: org.joda.time.field.DelegatedDurationField.add(JJ)J:134 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 25: org.joda.time.field.DelegatedDurationField.add(JJ)J:134 - InsertUnaryOp Negation
   * Goal 6. org.joda.time.field.DelegatedDurationField.add(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.add(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.add(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:add(JJ)J
   */

  @Test
  public void test26()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.add((long) 3694, 0L);
      assertEquals(3694L, long0);
  }

  //Test case number: 27
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JJ)J:negative
   */

  @Test
  public void test27()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.add((-2789L), (-2789L));
      assertEquals((-5578L), long0);
  }

  //Test case number: 28
  /*
   * 10 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JI)J:zero
   * Goal 2. org.joda.time.field.DelegatedDurationField.add(JI)J: Line 130
   * Goal 3. org.joda.time.field.DelegatedDurationField.add(JI)J: root-Branch
   * Goal 4. Weak Mutation 20: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 21: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp Negation
   * Goal 6. Weak Mutation 22: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp IINC 1
   * Goal 7. Weak Mutation 23: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp IINC -1
   * Goal 8. org.joda.time.field.DelegatedDurationField.add(JI)J
   * Goal 9. org.joda.time.field.DelegatedDurationField.add(JI)J
   * Goal 10. Branch org.joda.time.field.DelegatedDurationField.add(JI)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:add(JI)J
   */

  @Test
  public void test28()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.add(0L, 0);
      assertEquals(0L, long0);
  }

  //Test case number: 29
  /*
   * 1 covered goal:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JI)J:positive
   */

  @Test
  public void test29()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      Instant instant0 = Instant.now();
      ISOChronology iSOChronology0 = (ISOChronology)instant0.getChronology();
      PreciseDurationField preciseDurationField0 = (PreciseDurationField)durationFieldType0.getField(iSOChronology0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(preciseDurationField0);
      long long0 = delegatedDurationField0.add((long) 1, 1);
      assertEquals(1001L, long0);
  }

  //Test case number: 30
  /*
   * 2 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JI)J:negative
   * Goal 2. org.joda.time.field.DelegatedDurationField.add(JI)J
   */

  @Test
  public void test30()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.add((long) 0, (-1));
      assertEquals((-609L), long0);
  }

  //Test case number: 31
  /*
   * 1 covered goal:
   * Goal 1. getValueAsLong(JJ)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test31()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.days();
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getValueAsLong((-2716L), (-2716L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // days field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 32
  /*
   * 1 covered goal:
   * Goal 1. getValueAsLong(JJ)J_java.lang.ArithmeticException_IMPLICIT
   */

  @Test
  public void test32()  throws Throwable  {
      Period period0 = Period.minutes(0);
      Days days0 = period0.toStandardDays();
      DurationFieldType durationFieldType0 = days0.getFieldType();
      PreciseDurationField preciseDurationField0 = new PreciseDurationField(durationFieldType0, (long) 0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(preciseDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getValueAsLong((long) 0, 645L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         assertThrownBy("org.joda.time.field.PreciseDurationField", e);
      }
  }

  //Test case number: 33
  /*
   * 1 covered goal:
   * Goal 1. getValue(JJ)I_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test33()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)strictChronology0.eras();
      DurationFieldType durationFieldType0 = DurationFieldType.minutes();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getValue(494L, 494L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // eras field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 34
  /*
   * 1 covered goal:
   * Goal 1. getValue(JJ)I_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test34()  throws Throwable  {
      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(copticChronology0);
      DurationField durationField0 = strictChronology0.months();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getValue(6718464000000000000L, 0L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Value cannot fit in an int: 2767638603
         //
         assertThrownBy("org.joda.time.field.FieldUtils", e);
      }
  }

  //Test case number: 35
  /*
   * 1 covered goal:
   * Goal 1. getMillis(J)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test35()  throws Throwable  {
      Duration duration0 = new Duration((-233L));
      Days days0 = duration0.toStandardDays();
      Weeks weeks0 = days0.toStandardWeeks();
      DurationFieldType durationFieldType0 = weeks0.getFieldType(0);
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getMillis((long) 0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // weeks field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 36
  /*
   * 1 covered goal:
   * Goal 1. getMillis(IJ)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test36()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getMillis(48, 47L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // seconds field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 37
  /*
   * 1 covered goal:
   * Goal 1. getMillis(I)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test37()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstance();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)strictChronology0.eras();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getMillis((-1));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // eras field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 38
  /*
   * 1 covered goal:
   * Goal 1. getDifferenceAsLong(JJ)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test38()  throws Throwable  {
      IslamicChronology islamicChronology0 = IslamicChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(islamicChronology0);
      UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)strictChronology0.eras();
      DurationFieldType durationFieldType0 = DurationFieldType.millis();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getDifferenceAsLong((-441L), (-441L));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // eras field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 39
  /*
   * 1 covered goal:
   * Goal 1. getDifference(JJ)I_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test39()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.weeks();
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0, durationFieldType0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getDifference(5739, 5739);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // weeks field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 40
  /*
   * 1 covered goal:
   * Goal 1. add(JJ)J_org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException_EXPLICIT
   */

  @Test
  public void test40()  throws Throwable  {
      EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance();
      StrictChronology strictChronology0 = StrictChronology.getInstance(ethiopicChronology0);
      DurationField durationField0 = strictChronology0.centuries();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.add((-1147L), (-2682L));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The resulting instant is below the supported minimum of 0001-01-01T00:00:00.000Z (EthiopicChronology[UTC])
         //
         assertThrownBy("org.joda.time.chrono.LimitChronology", e);
      }
  }

  //Test case number: 41
  /*
   * 1 covered goal:
   * Goal 1. add(JJ)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test41()  throws Throwable  {
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance((DurationFieldType) null);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.add((-725L), 1930L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // null field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 42
  /*
   * 1 covered goal:
   * Goal 1. add(JJ)J_java.lang.ArithmeticException_EXPLICIT
   */

  @Test
  public void test42()  throws Throwable  {
      DateTimeFieldType dateTimeFieldType0 = DateTimeFieldType.weekOfWeekyear();
      DurationFieldType durationFieldType0 = dateTimeFieldType0.getRangeDurationType();
      EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstanceUTC();
      DurationField durationField0 = durationFieldType0.getField(ethiopicChronology0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.add(147689740795320L, 147689740795320L);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Value cannot fit in an int: 147689740795320
         //
         assertThrownBy("org.joda.time.field.FieldUtils", e);
      }
  }

  //Test case number: 43
  /*
   * 6 covered goals:
   * Goal 1. <init>(Lorg/joda/time/DurationField;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 2. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 62
   * Goal 3. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - false
   * Goal 4. Weak Mutation 1: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:62 - ReplaceConstant - The field must not be null -> 
   * Goal 5. Weak Mutation 2: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:62 - ReplaceComparisonOperator == -> !=
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - false in context: 
   */

  @Test
  public void test43()  throws Throwable  {
      DelegatedDurationField delegatedDurationField0 = null;
      try {
        delegatedDurationField0 = new DelegatedDurationField((DurationField) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The field must not be null
         //
         assertThrownBy("org.joda.time.field.DelegatedDurationField", e);
      }
  }

  //Test case number: 44
  /*
   * 13 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;: Line 165
   * Goal 2. org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;: I4 Branch 4 IFNONNULL L165 - true
   * Goal 3. Weak Mutation 36: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceComparisonOperator != null -> = null
   * Goal 4. Weak Mutation 37: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - DurationField[ -> 
   * Goal 5. Weak Mutation 38: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - 93 -> 0
   * Goal 6. Weak Mutation 39: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - 93 -> 1
   * Goal 7. Weak Mutation 40: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - 93 -> -1
   * Goal 8. Weak Mutation 41: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - 93 -> 92
   * Goal 9. Weak Mutation 42: org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:165 - ReplaceConstant - 93 -> 94
   * Goal 10. org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;:nonnull
   * Goal 11. org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;
   * Goal 12. org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;
   * Goal 13. Branch org.joda.time.field.DelegatedDurationField.toString()Ljava/lang/String;: I4 Branch 4 IFNONNULL L165 - true in context: org.joda.time.field.DelegatedDurationField:toString()Ljava/lang/String;
   */

  @Test
  public void test44()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(decoratedDurationField0, durationFieldType0);
      String string0 = delegatedDurationField0.toString();
      assertEquals("DurationField[halfdays]", string0);
  }

  //Test case number: 45
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.isSupported()Z: Line 90
   * Goal 2. org.joda.time.field.DelegatedDurationField.isSupported()Z: root-Branch
   * Goal 3. org.joda.time.field.DelegatedDurationField.isSupported()Z:true
   * Goal 4. org.joda.time.field.DelegatedDurationField.isSupported()Z
   * Goal 5. org.joda.time.field.DelegatedDurationField.isSupported()Z
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.isSupported()Z: root-Branch in context: org.joda.time.field.DelegatedDurationField:isSupported()Z
   */

  @Test
  public void test45()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0, durationFieldType0);
      boolean boolean0 = delegatedDurationField0.isSupported();
      assertTrue(boolean0);
  }

  //Test case number: 46
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.isPrecise()Z: Line 94
   * Goal 2. org.joda.time.field.DelegatedDurationField.isPrecise()Z: root-Branch
   * Goal 3. org.joda.time.field.DelegatedDurationField.isPrecise()Z:true
   * Goal 4. org.joda.time.field.DelegatedDurationField.isPrecise()Z
   * Goal 5. org.joda.time.field.DelegatedDurationField.isPrecise()Z
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.isPrecise()Z: root-Branch in context: org.joda.time.field.DelegatedDurationField:isPrecise()Z
   */

  @Test
  public void test46()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(decoratedDurationField0, durationFieldType0);
      boolean boolean0 = delegatedDurationField0.isPrecise();
      assertTrue(boolean0);
  }

  //Test case number: 47
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.hashCode()I: Line 161
   * Goal 2. org.joda.time.field.DelegatedDurationField.hashCode()I: root-Branch
   * Goal 3. Weak Mutation 32: org.joda.time.field.DelegatedDurationField.hashCode()I:161 - ReplaceComparisonOperator == -> !=
   * Goal 4. Weak Mutation 33: org.joda.time.field.DelegatedDurationField.hashCode()I:161 - ReplaceComparisonOperator == -> !=
   * Goal 5. Weak Mutation 34: org.joda.time.field.DelegatedDurationField.hashCode()I:161 - ReplaceBitwiseOperator ^ -> |
   * Goal 6. Weak Mutation 35: org.joda.time.field.DelegatedDurationField.hashCode()I:161 - ReplaceBitwiseOperator ^ -> &
   * Goal 7. org.joda.time.field.DelegatedDurationField.hashCode()I:positive
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.hashCode()I: root-Branch in context: org.joda.time.field.DelegatedDurationField:hashCode()I
   */

  @Test
  public void test47()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      delegatedDurationField0.hashCode();
  }

  //Test case number: 48
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: Line 110
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: root-Branch
   * Goal 3. Weak Mutation 8: org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:110 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 9: org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:110 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J:negative
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getValueAsLong(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValueAsLong(JJ)J
   */

  @Test
  public void test48()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.getValueAsLong((-470L), (-470L));
      assertEquals((-470L), long0);
  }

  //Test case number: 49
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J: Line 102
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J: root-Branch
   * Goal 3. Weak Mutation 5: org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J:102 - InsertUnaryOp Negation
   * Goal 4. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J:positive
   * Goal 5. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.getValueAsLong(J)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValueAsLong(J)J
   */

  @Test
  public void test49()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(decoratedDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getValueAsLong(1071L);
      assertEquals(1071L, long0);
  }

  //Test case number: 50
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValue(JJ)I: Line 106
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValue(JJ)I: root-Branch
   * Goal 3. Weak Mutation 6: org.joda.time.field.DelegatedDurationField.getValue(JJ)I:106 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 7: org.joda.time.field.DelegatedDurationField.getValue(JJ)I:106 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getValue(JJ)I:zero
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValue(JJ)I
   * Goal 7. org.joda.time.field.DelegatedDurationField.getValue(JJ)I
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getValue(JJ)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValue(JJ)I
   */

  @Test
  public void test50()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      int int0 = delegatedDurationField0.getValue(0L, 0L);
      assertEquals(0, int0);
  }

  //Test case number: 51
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getValue(J)I: Line 98
   * Goal 2. org.joda.time.field.DelegatedDurationField.getValue(J)I: root-Branch
   * Goal 3. Weak Mutation 4: org.joda.time.field.DelegatedDurationField.getValue(J)I:98 - InsertUnaryOp Negation
   * Goal 4. org.joda.time.field.DelegatedDurationField.getValue(J)I:positive
   * Goal 5. org.joda.time.field.DelegatedDurationField.getValue(J)I
   * Goal 6. org.joda.time.field.DelegatedDurationField.getValue(J)I
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.getValue(J)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:getValue(J)I
   */

  @Test
  public void test51()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      int int0 = delegatedDurationField0.getValue(45694466496000L);
      assertEquals(1448, int0);
  }

  //Test case number: 52
  /*
   * 6 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getUnitMillis()J: Line 146
   * Goal 2. org.joda.time.field.DelegatedDurationField.getUnitMillis()J: root-Branch
   * Goal 3. org.joda.time.field.DelegatedDurationField.getUnitMillis()J:positive
   * Goal 4. org.joda.time.field.DelegatedDurationField.getUnitMillis()J
   * Goal 5. org.joda.time.field.DelegatedDurationField.getUnitMillis()J
   * Goal 6. Branch org.joda.time.field.DelegatedDurationField.getUnitMillis()J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getUnitMillis()J
   */

  @Test
  public void test52()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(decoratedDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getUnitMillis();
      assertEquals(1L, long0);
  }

  //Test case number: 53
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: Line 126
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: root-Branch
   * Goal 3. Weak Mutation 18: org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:126 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 19: org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:126 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J:negative
   * Goal 6. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getMillis(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getMillis(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(JJ)J
   */

  @Test
  public void test53()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.UTC;
      BuddhistChronology buddhistChronology0 = BuddhistChronology.getInstance(dateTimeZone0);
      StrictChronology strictChronology0 = StrictChronology.getInstance(buddhistChronology0);
      DurationField durationField0 = strictChronology0.seconds();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getMillis((-441L), 266L);
      assertEquals((-441000L), long0);
  }

  //Test case number: 54
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(J)J: Line 118
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(J)J: root-Branch
   * Goal 3. Weak Mutation 13: org.joda.time.field.DelegatedDurationField.getMillis(J)J:118 - InsertUnaryOp Negation
   * Goal 4. org.joda.time.field.DelegatedDurationField.getMillis(J)J:positive
   * Goal 5. org.joda.time.field.DelegatedDurationField.getMillis(J)J
   * Goal 6. org.joda.time.field.DelegatedDurationField.getMillis(J)J
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.getMillis(J)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(J)J
   */

  @Test
  public void test54()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getMillis((long) 609);
      assertEquals(609L, long0);
      assertEquals("halfdays", delegatedDurationField0.getName());
  }

  //Test case number: 55
  /*
   * 10 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: Line 122
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: root-Branch
   * Goal 3. Weak Mutation 14: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 15: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp IINC 1
   * Goal 5. Weak Mutation 16: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp IINC -1
   * Goal 6. Weak Mutation 17: org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:122 - InsertUnaryOp Negation
   * Goal 7. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J:positive
   * Goal 8. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J
   * Goal 9. org.joda.time.field.DelegatedDurationField.getMillis(IJ)J
   * Goal 10. Branch org.joda.time.field.DelegatedDurationField.getMillis(IJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(IJ)J
   */

  @Test
  public void test55()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0);
      long long0 = delegatedDurationField0.getMillis(1440, (-3053L));
      assertEquals(1440L, long0);
  }

  //Test case number: 56
  /*
   * 9 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getMillis(I)J: Line 114
   * Goal 2. org.joda.time.field.DelegatedDurationField.getMillis(I)J: root-Branch
   * Goal 3. Weak Mutation 10: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 11: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp IINC 1
   * Goal 5. Weak Mutation 12: org.joda.time.field.DelegatedDurationField.getMillis(I)J:114 - InsertUnaryOp IINC -1
   * Goal 6. org.joda.time.field.DelegatedDurationField.getMillis(I)J:positive
   * Goal 7. org.joda.time.field.DelegatedDurationField.getMillis(I)J
   * Goal 8. org.joda.time.field.DelegatedDurationField.getMillis(I)J
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.getMillis(I)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getMillis(I)J
   */

  @Test
  public void test56()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.getMillis(1448);
      assertEquals(45694466496000L, long0);
  }

  //Test case number: 57
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: Line 142
   * Goal 2. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: root-Branch
   * Goal 3. Weak Mutation 28: org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:142 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 29: org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:142 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J:zero
   * Goal 6. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getDifferenceAsLong(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:getDifferenceAsLong(JJ)J
   */

  @Test
  public void test57()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(scaledDurationField0, durationFieldType0);
      long long0 = delegatedDurationField0.getDifferenceAsLong(609, 609);
      assertEquals(0L, long0);
  }

  //Test case number: 58
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: Line 138
   * Goal 2. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: root-Branch
   * Goal 3. Weak Mutation 26: org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:138 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 27: org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:138 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I:negative
   * Goal 6. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I
   * Goal 7. org.joda.time.field.DelegatedDurationField.getDifference(JJ)I
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.getDifference(JJ)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:getDifference(JJ)I
   */

  @Test
  public void test58()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(decoratedDurationField0, durationFieldType0);
      int int0 = delegatedDurationField0.getDifference(609, 1071L);
      assertEquals((-462), int0);
  }

  //Test case number: 59
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: Line 155
   * Goal 2. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFEQ L154 - false
   * Goal 3. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z:true
   * Goal 4. Branch org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFEQ L154 - false in context: org.joda.time.field.DelegatedDurationField:equals(Ljava/lang/Object;)Z
   * Goal 5. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: Line 154
   * Goal 6. Weak Mutation 30: org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z:154 - ReplaceComparisonOperator == -> !=
   * Goal 7. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z
   * Goal 8. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test59()  throws Throwable  {
      CopticChronology copticChronology0 = CopticChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(copticChronology0);
      DurationField durationField0 = strictChronology0.months();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      boolean boolean0 = delegatedDurationField0.equals(delegatedDurationField0);
      assertTrue(boolean0);
  }

  //Test case number: 60
  /*
   * 9 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: Line 154
   * Goal 2. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: Line 157
   * Goal 3. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFEQ L154 - true
   * Goal 4. Weak Mutation 30: org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z:154 - ReplaceComparisonOperator == -> !=
   * Goal 5. Weak Mutation 31: org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z:157 - ReplaceConstant - 0 -> 1
   * Goal 6. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z:false
   * Goal 7. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z
   * Goal 8. org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.equals(Ljava/lang/Object;)Z: I4 Branch 3 IFEQ L154 - true in context: org.joda.time.field.DelegatedDurationField:equals(Ljava/lang/Object;)Z
   */

  @Test
  public void test60()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      ScaledDurationField scaledDurationField0 = new ScaledDurationField((DurationField) decoratedDurationField0, durationFieldType0, 609);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0, durationFieldType0);
      boolean boolean0 = delegatedDurationField0.equals(scaledDurationField0);
      assertFalse(boolean0);
      assertEquals("halfdays", delegatedDurationField0.getName());
  }

  //Test case number: 61
  /*
   * 9 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: Line 150
   * Goal 2. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch
   * Goal 3. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - true
   * Goal 4. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I:zero
   * Goal 5. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I
   * Goal 6. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V
   * Goal 7. org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.compareTo(Lorg/joda/time/DurationField;)I: root-Branch in context: org.joda.time.field.DelegatedDurationField:compareTo(Lorg/joda/time/DurationField;)I
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I37 Branch 2 IFNONNULL L65 - true in context: 
   */

  @Test
  public void test61()  throws Throwable  {
      MillisDurationField millisDurationField0 = (MillisDurationField)MillisDurationField.INSTANCE;
      DurationFieldType durationFieldType0 = DurationFieldType.halfdays();
      DecoratedDurationField decoratedDurationField0 = new DecoratedDurationField((DurationField) millisDurationField0, durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(millisDurationField0, durationFieldType0);
      delegatedDurationField0.compareTo((DurationField) decoratedDurationField0);
      assertEquals("halfdays", delegatedDurationField0.getName());
  }

  //Test case number: 62
  /*
   * 8 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JJ)J: Line 134
   * Goal 2. org.joda.time.field.DelegatedDurationField.add(JJ)J: root-Branch
   * Goal 3. Weak Mutation 24: org.joda.time.field.DelegatedDurationField.add(JJ)J:134 - InsertUnaryOp Negation
   * Goal 4. Weak Mutation 25: org.joda.time.field.DelegatedDurationField.add(JJ)J:134 - InsertUnaryOp Negation
   * Goal 5. org.joda.time.field.DelegatedDurationField.add(JJ)J:zero
   * Goal 6. org.joda.time.field.DelegatedDurationField.add(JJ)J
   * Goal 7. org.joda.time.field.DelegatedDurationField.add(JJ)J
   * Goal 8. Branch org.joda.time.field.DelegatedDurationField.add(JJ)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:add(JJ)J
   */

  @Test
  public void test62()  throws Throwable  {
      GregorianChronology gregorianChronology0 = GregorianChronology.getInstanceUTC();
      StrictChronology strictChronology0 = StrictChronology.getInstance(gregorianChronology0);
      DurationField durationField0 = strictChronology0.years();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(durationField0);
      long long0 = delegatedDurationField0.add(0L, (long) 0);
      assertEquals(0L, long0);
  }

  //Test case number: 63
  /*
   * 9 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.add(JI)J: Line 130
   * Goal 2. org.joda.time.field.DelegatedDurationField.add(JI)J: root-Branch
   * Goal 3. add(JI)J_java.lang.UnsupportedOperationException_EXPLICIT
   * Goal 4. Weak Mutation 20: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp Negation
   * Goal 5. Weak Mutation 21: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp Negation
   * Goal 6. Weak Mutation 22: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp IINC 1
   * Goal 7. Weak Mutation 23: org.joda.time.field.DelegatedDurationField.add(JI)J:130 - InsertUnaryOp IINC -1
   * Goal 8. org.joda.time.field.DelegatedDurationField.add(JI)J
   * Goal 9. Branch org.joda.time.field.DelegatedDurationField.add(JI)J: root-Branch in context: org.joda.time.field.DelegatedDurationField:add(JI)J
   */

  @Test
  public void test63()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.seconds();
      UnsupportedDurationField unsupportedDurationField0 = UnsupportedDurationField.getInstance(durationFieldType0);
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.add(0L, (-1340));
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // seconds field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }

  //Test case number: 64
  /*
   * 7 covered goals:
   * Goal 1. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: Line 62
   * Goal 2. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - false
   * Goal 3. <init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V_java.lang.IllegalArgumentException_EXPLICIT
   * Goal 4. Weak Mutation 1: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:62 - ReplaceConstant - The field must not be null -> 
   * Goal 5. Weak Mutation 2: org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V:62 - ReplaceComparisonOperator == -> !=
   * Goal 6. org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V
   * Goal 7. Branch org.joda.time.field.DelegatedDurationField.<init>(Lorg/joda/time/DurationField;Lorg/joda/time/DurationFieldType;)V: I7 Branch 1 IFNONNULL L61 - false in context: 
   */

  @Test
  public void test64()  throws Throwable  {
      DurationFieldType durationFieldType0 = DurationFieldType.months();
      DelegatedDurationField delegatedDurationField0 = null;
      try {
        delegatedDurationField0 = new DelegatedDurationField((DurationField) null, durationFieldType0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The field must not be null
         //
         assertThrownBy("org.joda.time.field.DelegatedDurationField", e);
      }
  }

  //Test case number: 65
  /*
   * 1 covered goal:
   * Goal 1. getValueAsLong(J)J_java.lang.UnsupportedOperationException_EXPLICIT
   */

  @Test
  public void test65()  throws Throwable  {
      EthiopicChronology ethiopicChronology0 = EthiopicChronology.getInstance();
      StrictChronology strictChronology0 = StrictChronology.getInstance(ethiopicChronology0);
      UnsupportedDurationField unsupportedDurationField0 = (UnsupportedDurationField)strictChronology0.eras();
      DelegatedDurationField delegatedDurationField0 = new DelegatedDurationField(unsupportedDurationField0);
      // Undeclared exception!
      try { 
        delegatedDurationField0.getValueAsLong(0L);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // eras field is unsupported
         //
         assertThrownBy("org.joda.time.field.UnsupportedDurationField", e);
      }
  }
}
